{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "User Profile API",
    "description": "API endpoints for managing user profiles"
  },
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
   
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Register a new user with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "JWT_token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/google": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Initiate Google OAuth login",
        "description": "Copy Paste the address to the url http://localhost:3000/auth/login/google"
      }
    },
    "/auth/login/google/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Handle Google OAuth callback",
        "description": "Handles the callback from Google OAuth provider after authentication.",
        "responses": {
          "302": {
            "description": "Redirect to the appropriate page after authentication"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout",
        "description": "Logout the authenticated user",
        "produces": ["application/json"],
       
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Logout successful"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/profile/me": {
      "get": {
        "tags": ["Profile"],
        "summary": "Get user profile",
        "description": "Retrieve user's own profile details",
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Authorization": {
                "type": "string",
                "description": "JWT token",
                "example": "Bearer <token>"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update user profile",
        "description": "Update user's own profile details",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
       
          {
            "name": "body",
            "in": "body",
            "description": "Updated profile data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Profile updated successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          }
        }
      }
    },
    "/profile/me/photo": {
      "post": {
        "tags": ["Profile"],
        "summary": "Upload Profile Photo",
        "description": "Endpoint to upload a new profile photo for the authenticated user. Users can upload a photo from their local machine or provide a link to the photo.",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Image file to upload (if uploading from local machine)",
            "required": false,
            "type": "file"
          },
          {
            "name": "imageUrl",
            "in": "formData",
            "description": "URL of the image (if providing a link)",
            "required": false,
            "type": "string"
          }
        ],
       
        "responses": {
          "200": {
            "description": "Profile photo uploaded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Profile photo uploaded successfully"
                },
                "imageUrl": {
                  "type": "string",
                  "example": "http://example.com/uploads/photo123.jpg"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No file uploaded or image URL provided"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized access. Please provide a valid JWT token."
                }
              }
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "JWT": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT token for authentication. Please include 'Bearer ' followed by the token."
      }
    },
    "/profile/photos": {
      "post": {
        "tags": ["Profile"],
        "summary": "Upload Photos",
        "description": "Endpoint to upload photos for the authenticated user.",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          
          {
            "name": "photos",
            "in": "formData",
            "description": "Array of photo files to upload",
            "required": true,
            "type": "file",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Photos uploaded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Photos uploaded successfully"
                },
                "photos": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "http://example.com/uploads/photo1.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No photos uploaded"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized access. Please provide a valid JWT token."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
  "/profile/me/privacy": {
    "put": {
      "tags": ["Profile"],
      "summary": "Update Profile Privacy",
      "description": "Endpoint to update the privacy settings of the authenticated user's profile.",
      "security": [
        {
          "jwt": []
        }
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Updated privacy settings",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "isProfilePublic": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Profile privacy settings updated successfully",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Profile privacy settings updated successfully"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Unauthorized access"
              }
            }
          }
        }
      }
    }
  },
  "/profile/public": {
    "get": {
      "tags": ["Profile"],
      "summary": "Get Public User Profiles",
      "description": "Endpoint to retrieve public user profiles, accessible to normal users.",
      "security": [
        {
          "jwt": []
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Unauthorized access"
              }
            }
          }
        }
      }
    }
  },
  "/profile": {
    "get": {
      "tags": ["Profile"],
      "summary": "Get All User Profiles",
      "description": "Endpoint to retrieve all user profiles, accessible to admin users.",
      "security": [
        {
          "jwt": []
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Unauthorized access"
              }
            }
          }
        }
      }
    }
  }
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT authorization header"
    }
  },
  "definitions": {
    "UserProfile": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "bio": {
          "type": "string",
          "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        },
        "photo": {
          "type": "string",
          "example": "http://localhost:3000/uploads/photo123.jpg"
        },
        "isProfilePublic": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "UserProfileUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "bio": {
          "type": "string",
          "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        }
      }
    }
  }
}
  